{"ast":null,"code":"var _jsxFileName = \"/home/steve/Development/code/phase 2/react-hooks-fetch-crud-lab/src/components/QuestionItem.js\";\nimport React, { memo } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuestionItem = /*#__PURE__*/memo(_c = ({\n  question,\n  onDelete\n}) => {\n  const {\n    id,\n    prompt,\n    answers,\n    correctIndex\n  } = question;\n  const options = answers.map((answer, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n    value: index,\n    children: answer\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this));\n  async function handleDelete() {\n    await fetch(`http://localhost:4000/questions/${id}`, {\n      method: \"DELETE\"\n    });\n    onDelete(id);\n  }\n  async function handleChange(event) {\n    const updatedCorrectIndex = event.target.value;\n    await fetch(`http://localhost:4000/questions/${id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        correctIndex: parseInt(updatedCorrectIndex, 10)\n      })\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\"Question \", id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: [\"Prompt: \", prompt]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Correct Answer:\", /*#__PURE__*/_jsxDEV(\"select\", {\n        value: correctIndex,\n        onChange: handleChange,\n        children: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleDelete,\n      children: \"Delete Question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n});\n_c2 = QuestionItem;\nexport default QuestionItem;\nvar _c, _c2;\n$RefreshReg$(_c, \"QuestionItem$memo\");\n$RefreshReg$(_c2, \"QuestionItem\");","map":{"version":3,"names":["React","memo","jsxDEV","_jsxDEV","QuestionItem","_c","question","onDelete","id","prompt","answers","correctIndex","options","map","answer","index","value","children","fileName","_jsxFileName","lineNumber","columnNumber","handleDelete","fetch","method","handleChange","event","updatedCorrectIndex","target","headers","body","JSON","stringify","parseInt","onChange","onClick","_c2","$RefreshReg$"],"sources":["/home/steve/Development/code/phase 2/react-hooks-fetch-crud-lab/src/components/QuestionItem.js"],"sourcesContent":["import React, { memo } from \"react\";\n\nconst QuestionItem = memo(({ question, onDelete }) => {\n  const { id, prompt, answers, correctIndex } = question;\n\n  const options = answers.map((answer, index) => (\n    <option key={index} value={index}>\n      {answer}\n    </option>\n  ));\n\n  async function handleDelete() {\n    await fetch(`http://localhost:4000/questions/${id}`, {\n      method: \"DELETE\",\n    });\n\n    onDelete(id);\n  }\n\n  async function handleChange(event) {\n    const updatedCorrectIndex = event.target.value;\n\n    await fetch(`http://localhost:4000/questions/${id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ correctIndex: parseInt(updatedCorrectIndex, 10) }),\n    });\n  }\n\n  return (\n    <li>\n      <h4>Question {id}</h4>\n      <h5>Prompt: {prompt}</h5>\n      <label>\n        Correct Answer:\n        <select value={correctIndex} onChange={handleChange}>\n          {options}\n        </select>\n      </label>\n      <button onClick={handleDelete}>Delete Question</button>\n    </li>\n  );\n});\n\nexport default QuestionItem;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,IAAI,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,YAAY,gBAAGH,IAAI,CAAAI,EAAA,GAACA,CAAC;EAAEC,QAAQ;EAAEC;AAAS,CAAC,KAAK;EACpD,MAAM;IAAEC,EAAE;IAAEC,MAAM;IAAEC,OAAO;IAAEC;EAAa,CAAC,GAAGL,QAAQ;EAEtD,MAAMM,OAAO,GAAGF,OAAO,CAACG,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBACxCZ,OAAA;IAAoBa,KAAK,EAAED,KAAM;IAAAE,QAAA,EAC9BH;EAAM,GADIC,KAAK;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEV,CACT,CAAC;EAEF,eAAeC,YAAYA,CAAA,EAAG;IAC5B,MAAMC,KAAK,CAAC,mCAAmCf,EAAE,EAAE,EAAE;MACnDgB,MAAM,EAAE;IACV,CAAC,CAAC;IAEFjB,QAAQ,CAACC,EAAE,CAAC;EACd;EAEA,eAAeiB,YAAYA,CAACC,KAAK,EAAE;IACjC,MAAMC,mBAAmB,GAAGD,KAAK,CAACE,MAAM,CAACZ,KAAK;IAE9C,MAAMO,KAAK,CAAC,mCAAmCf,EAAE,EAAE,EAAE;MACnDgB,MAAM,EAAE,OAAO;MACfK,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAErB,YAAY,EAAEsB,QAAQ,CAACN,mBAAmB,EAAE,EAAE;MAAE,CAAC;IAC1E,CAAC,CAAC;EACJ;EAEA,oBACExB,OAAA;IAAAc,QAAA,gBACEd,OAAA;MAAAc,QAAA,GAAI,WAAS,EAACT,EAAE;IAAA;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACtBlB,OAAA;MAAAc,QAAA,GAAI,UAAQ,EAACR,MAAM;IAAA;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACzBlB,OAAA;MAAAc,QAAA,GAAO,iBAEL,eAAAd,OAAA;QAAQa,KAAK,EAAEL,YAAa;QAACuB,QAAQ,EAAET,YAAa;QAAAR,QAAA,EACjDL;MAAO;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC,eACRlB,OAAA;MAAQgC,OAAO,EAAEb,YAAa;MAAAL,QAAA,EAAC;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrD,CAAC;AAET,CAAC,CAAC;AAACe,GAAA,GA1CGhC,YAAY;AA4ClB,eAAeA,YAAY;AAAC,IAAAC,EAAA,EAAA+B,GAAA;AAAAC,YAAA,CAAAhC,EAAA;AAAAgC,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}